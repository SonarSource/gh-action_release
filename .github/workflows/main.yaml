name: Release
on:
  workflow_call:
    inputs:
      publishToBinaries:
        type: boolean
        description: Flag to enable the publication to binaries
        default: false
        required: false
      binariesS3Bucket:
        type: string
        description: Target bucket
        default: downloads-cdn-eu-central-1-prod
        required: false
      slackChannel:
        type: string
        description: Channel to post notifications
        default: build
        required: false
      vaultAddr:
        type: string
        description: Custom vault installation
        default: https://vault.sonar.build:8200
        required: false
      artifactoryRoleSuffix:
        type: string
        description: artifactory reader suffix specified in vault repo config
        default: private-reader
        required: false

env:
  PUBLISH_TO_BINARIES: ${{ inputs.publishToBinaries }}
  SLACK_CHANNEL: ${{ inputs.slackChannel }}
  VAULT_ADDR: ${{ inputs.vaultAddr }}
  ARTIFACTORY_ROLE_SUFFIX: ${{ inputs.artifactoryRoleSuffix }}
  PYTHONUNBUFFERED: 1

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write # to authenticate via OIDC
      contents: write # to revert a github release
    timeout-minutes: 30
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    outputs:
      releasability: ${{ steps.release.outputs.releasability }}
      promote: ${{ steps.release.outputs.promote }}
      publish_to_binaries: ${{ steps.release.outputs.publish_to_binaries }}
      release: ${{ steps.release.outputs.release }}
    steps:
      - name: Vault Secrets
        id: secrets
        uses: hashicorp/vault-action@7d98524254c38dc6892804f991526ff30905f643 # tag=v2.4.2
        with:
          url: ${{ env.VAULT_ADDR }}
          exportEnv: false
          method: jwt
          path: jwt-ghwf
          role: ${{ format('github-{0}-{1}', github.repository_owner, github.event.repository.name) }}
          secrets: |
            ${{ format('development/artifactory/token/{0}-{1}-{2}', github.repository_owner, github.event.repository.name, env.ARTIFACTORY_ROLE_SUFFIX) }} access_token | artifactory_access_token;
            development/kv/data/slack token | slack_api_token;
            development/kv/data/repox url | artifactory_url;
            development/kv/data/burgr github_username | burgrx_username;
            development/kv/data/burgr github_password | burgrx_password;
            development/aws/sts/downloads access_key | binaries_aws_access_key_id;
            development/aws/sts/downloads secret_key | binaries_aws_secret_access_key;
            development/aws/sts/downloads security_token | binaries_aws_security_token;
      - name: Release
        id: release
        uses: SonarSource/gh-action_release/main@d4f1cca676dced03adbe15cddfb2dfc666c1ece9 # tag=v5
        with:
          publish_to_binaries: ${{ env.PUBLISH_TO_BINARIES }} # Used only if the binaries is delivered to costumers
          slack_channel: ${{ env.SLACK_CHANNEL }}
        env:
          ARTIFACTORY_API_KEY: ${{ steps.secrets.outputs.artifactory_access_token }}
          BINARIES_AWS_DEPLOY: ${{ inputs.binariesS3Bucket }} # Required for pushing the binaries
          BURGRX_USER: ${{ steps.secrets.outputs.burgrx_username }}
          BURGRX_PASSWORD: ${{ steps.secrets.outputs.burgrx_password }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_API_TOKEN: ${{steps.secrets.outputs.slack_api_token }}
          AWS_ACCESS_KEY_ID: ${{ steps.secrets.outputs.binaries_aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.secrets.outputs.binaries_aws_secret_access_key }}
          AWS_SESSION_TOKEN: ${{ steps.secrets.outputs.binaries_aws_security_token }}
          AWS_DEFAULT_REGION: eu-central-1
      - name: Release action results
        if: always()
        run: |
          echo "${{ steps.release.outputs.releasability }}"
          echo "${{ steps.release.outputs.promote }}"
          echo "${{ steps.release.outputs.publish_to_binaries }}"
          echo "${{ steps.release.outputs.release }}"
