name: Unittest
on: [push]

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.7]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependecies
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: install -d
      - name: Test
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run python -m unittest        
        env:
          ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_TOKEN: ${{ secrets.BINTRAY_TOKEN }}
          BURGRX_USER: ${{ secrets.BURGRX_USER }}
          BURGRX_PASSWORD: ${{ secrets.BURGRX_PASSWORD }}
          CENTRAL_USER: ${{ secrets.CENTRAL_USER }}
          CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          CIRRUS_TOKEN: ${{ secrets.CIRRUS_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          PATH_PREFIX: ${{ secrets.BINARIES_PATH_PREFIX }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          RELEASE_SSH_USER: ${{ secrets.RELEASE_SSH_USER }}
          RELEASE_SSH_KEY: ${{ secrets.RELEASE_SSH_KEY }} 
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }} 
          INPUT_DISTRIBUTE: true
          INPUT_PUBLISH_TO_BINARIES: true
          INPUT_ATTACH_ARTIFACTS_TO_GITHUB_RELEASE: true
          INPUT_RUN_RULES_COV: false
          
