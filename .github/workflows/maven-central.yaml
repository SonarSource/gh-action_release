# yamllint disable rule:line-length
---
name: maven Central
"on":
  workflow_call:
    inputs:
      vaultAddr:
        type: string
        description: Custom vault installation
        default: https://vault.sonar.build:8200
        required: false
      artifactoryRoleSuffix:
        type: string
        description: artifactory reader suffix specified in vault repo config
        default: private-reader
        required: false
      downloadExclusions:
        type: string
        description: exclusions for the jfrog build download
        default: "-"
        required: false

jobs:
  maven-central:
    name: Push to maven Central
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # to authenticate via OIDC
      contents: read  # to revert a github release
    timeout-minutes: 30
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    outputs:
      maven-central: ${{ steps.maven-central-sync.outcome }}
    steps:
      - name: Get the version
        id: get_version
        run: |
          IFS=. read -r major minor patch build <<< "${{ github.event.release.tag_name }}"
          echo "build=${build}" >> $GITHUB_OUTPUT
          echo "patch=${patch}" >> $GITHUB_OUTPUT
          echo "minor=${minor}" >> $GITHUB_OUTPUT
          echo "major=${major}" >> $GITHUB_OUTPUT
      - name: Create local repository directory
        id: local_repo
        run: echo "dir=$(mktemp -d repo.XXXXXXXX)" >> $GITHUB_OUTPUT
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@d0877ce7085bc313bd7a7b99c4e4489d42fb40e1 # tag=3.0.0
        with:
          url: ${{ inputs.vaultAddr }}
          secrets:
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-${{ inputs.artifactoryRoleSuffix }} access_token  | artifactory_access_token;
            development/kv/data/ossrh username | ossrh_username;
            development/kv/data/ossrh password | ossrh_password;
            development/kv/data/slack webhook | slack_webhook;
      - name: Setup JFrog
        uses: SonarSource/jfrog-setup-wrapper@5712613f9a6c0379b2f46b936b77f16fc0a56d79  # tag=3.2.2
        with:
          jfrogAccessToken: ${{ fromJSON(steps.secrets.outputs.vault).artifactory_access_token }}
      - name: Download Artifacts
        uses: SonarSource/gh-action_release/download-build@34b70fd193819eef88d223c324acfb54fcce8396
        with:
          build-number: ${{ steps.get_version.outputs.build }}
          local-repo-dir: ${{ steps.local_repo.outputs.dir }}
          exclusions: ${{ inputs.downloadExclusions }}
      - name: Maven Central Sync
        id: maven-central-sync
        continue-on-error: true
        uses: SonarSource/gh-action_release/maven-central-sync@95eaa42a649490e6236043bbacbe5e90fccc054f
        with:
          local-repo-dir: ${{ steps.local_repo.outputs.dir }}
        env:
          OSSRH_USERNAME: ${{ fromJSON(steps.secrets.outputs.vault).ossrh_username }}
          OSSRH_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ossrh_password }}
      - name: Notify on failure
        if: ${{ failure() || steps.maven-central-sync.outcome == 'failure' }}
        uses: 8398a7/action-slack@28ba43ae48961b90635b50953d216767a6bea486 # v3.16.2
        with:
          status: failure
          fields: repo,author,eventName
        env:
          SLACK_WEBHOOK_URL: ${{ fromJSON(steps.secrets.outputs.vault).slack_webhook }}
      - name: Exit with error
        if: ${{ failure() || steps.maven-central-sync.outcome == 'failure' }}
        run: exit 1
